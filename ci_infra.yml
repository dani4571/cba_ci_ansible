- name: CI Infra
  hosts: ci_infra
  sudo: no
  tasks:
    - name: Install Debian dependencies
      apt: name={{ item }} state=installed
      with_items:
        - vlan
        - bridge-utils
        - lxc
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"
        HTTP_PROXY: "{{ http_proxy }}"
        HTTPS_PROXY: "{{ https_proxy }}"

    - name: setup br device
      template: src=cobbler_templates/interfaces.j2 dest=/etc/network/interfaces 

    - name: start br device
      command: ifup br-host
    - name: start br device
      command: ifup br-ipmi

    - name: get rpc prep lxc container
      get_url: url=http://mirror.rs.zbi.cba:8081/images/rpc-prep-lxc-container.tar.gz dest=/opt/rpc-prep-lxc-container.tar.gz

    - name: get ubuntu image
      get_url: url=http://mirror.rs.zbi.cba:8081/images/ubuntu-14.04.4-server-amd64.iso dest=/opt/ubuntu-14.04.4-server-amd64.iso

    - name: mount iso
      mount: name=/mnt src=/opt/ubuntu-14.04.4-server-amd64.iso fstype=iso9660 opts=loop state=mounted

    - name: untar rpc prep container
      unarchive: src=/opt/rpc-prep-lxc-container.tar.gz dest=/var/lib/lxc/

    - name: set container config
      template: src=cobbler_templates/lxc_config.j2 dest=/var/lib/lxc/rpc-prep/config

    - name: stop container
      command: lxc-stop -n rpc-prep
      ignore_errors: yes

    - name: start container
      command: lxc-start -d --name rpc-prep

    - name: Copy SSH key
      copy: src={{ ansible_ssh_public_key_file }} dest=/var/lib/lxc/rpc-prep/rootfs/root/.ssh/authorized_keys mode=0600

    - name: Install base pkgs
      lxc_container:
        name: "rpc-prep"
        container_command: |
          apt-key update
          apt-get update
          apt-get upgrade -y >>/root/upgrade_output.log 2>>/root/upgrade_output.err
          apt-get install --force-yes -y wget openssh-server python python-dev host >>/root/install_output.log 2>>/root/install_output.err
          mkdir -p /opt/ubuntu-14.04.4-server-amd64
      register: lxc_output

    - name: wait for IP
      lxc_container:
        name: "rpc-prep"
      until:  lxc_output['lxc_container']['ips']
      register: lxc_output

    - name: add new host
      add_host: ansible_ssh_host={{ lxc_output['lxc_container']['ips'][0] }} hostname=rpc-prep groups=cobbler

    - name: synchronize ubuntu files
      copy: src=/mnt/ dest=/var/lib/lxc/rpc-prep/rootfs/opt/ubuntu-14.04.4-server-amd64/
      #synchronize: src=/mnt/* dest=rsync://{{ lxc_output['lxc_container']['ips'][0] }}:/opt/ubuntu-14.04.4-server-amd64/

    - name: unmount iso
      mount: name=/mnt src=/opt/ubuntu-14.04.4-server-amd64.iso fstype=iso9660 opts=loop state=unmounted

#    - include: lxc_container_create.yml
#      vars:
#        name: jenkins1
#        group: jenkins


#- name: Run Jenkins on Container
#  hosts: jenkins
#  roles: 
#    - jenkins

- name: Run Cobbler on Container
  hosts: cobbler
  tasks: 
    - name: set server vars in cobbler settings
      template: src=cobbler_templates/settings.j2 dest=/etc/cobbler/settings

    - name: dhcp interface
      lineinfile: dest=/etc/default/isc-dhcp-server regexp='^INTERFACES=' line="INTERFACES="{{ dhcp_interfaces }}

    - name: dhcp config
      template: src=cobbler_templates/dhcp.j2 dest=/etc/cobbler/dhcp.template

    - name: import image to cobbler
      command: cobbler import --name=ubuntu-14.04.4-server-amd64 --path=/opt/ubuntu-14.04.4-server-amd64

    - name: delete image
      file: path=/opt/ubuntu-14.04.4-server-amd64 state=absent

    - name: get sources.list file
      file: src=files/trusty-sources.list dest=/var/www/html/trusty-sources.list

    - name: copy preseed files
      file: src=file/preseeds-rpc dest=/opt/ state=directory

    - name: add cobbler profile
      command: |
          cobbler profile add \
          --name ubuntu-14.04.4-server-unattended-rpc \
          --distro ubuntu-14.04.4-server-x86_64 \
          --kickstart /opt/preseeds-rpc/ubuntu-server-14.04-unattended-cobbler-rpc.seed

    - name: restart service
      service: name=cobbler state=restarted

    - name: sync cobbler
      command: cobbler sync

